
import java.awt.Color;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nauman
 */
public class tictactoe extends javax.swing.JFrame {

    /**
     * Creates new form tictactoe
     */
    
    static int turn=1;
    static int buttonused[] = {0,0,0,0,0,0,0,0,0};
    static int p1won[]={0,0,0,0,0,0,0,0,0};
    static int p2won[]={0,0,0,0,0,0,0,0,0};
    static int counter=0;
    
    static int p1won()
    {
        if(p1won[0]==1 && p1won[1]==1 && p1won[2]==1)
        {
            return 1;
           
        }
        
        else if(p1won[3]==1 && p1won[4]==1 && p1won[5]==1)
        {
            return 1;
        }
        
        else if(p1won[6]==1 && p1won[7]==1 && p1won[8]==1)
        {
            return 1;
        }
        
        else if(p1won[0]==1 && p1won[3]==1 && p1won[6]==1)
        {
            return 1;
        }
        
        else if(p1won[1]==1 && p1won[4]==1 && p1won[7]==1)
        {
            return 1;
        }
        
        else if(p1won[2]==1 && p1won[5]==1 && p1won[8]==1)
        {
            return 1;
        }
        
        else if(p1won[0]==1 && p1won[4]==1 && p1won[8]==1)
        {
            return 1;
        }
        
        else if(p1won[2]==1 && p1won[4]==1 && p1won[6]==1)
        {
            return 1;
        }
        
       else
        {
            return 0;
        }
    }
    
    static int p2won()
    {
        if(p2won[0]==1 && p2won[1]==1 && p2won[2]==1)
        {
            return 1;
        }
        
        else if(p2won[3]==1 && p2won[4]==1 && p2won[5]==1)
        {
            return 1;
        }
        
        else if(p2won[6]==1 && p2won[7]==1 && p2won[8]==1)
        {
            return 1;
        }
        
        else if(p2won[0]==1 && p2won[3]==1 && p2won[6]==1)
        {
            return 1;
        }
        
        else if(p2won[1]==1 && p2won[4]==1 && p2won[7]==1)
        {
            return 1;
        }
        
        else if(p2won[2]==1 && p2won[5]==1 && p2won[8]==1)
        {
            return 1;
        }
        
        else if(p2won[0]==1 && p2won[4]==1 && p2won[8]==1)
        {
            return 1;
        }
        
        else if(p2won[2]==1 && p2won[4]==1 && p2won[6]==1)
        {
            return 1;
        }
        
       else
        {
            return 0;
        }
    }
    
    public tictactoe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b1 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        Reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        b1.setFont(new java.awt.Font("Times New Roman", 0, 72)); // NOI18N
        b1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 51, 51)));
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b4.setFont(new java.awt.Font("Times New Roman", 0, 72)); // NOI18N
        b4.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 51, 51)));
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b7.setFont(new java.awt.Font("Times New Roman", 0, 72)); // NOI18N
        b7.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 51, 51)));
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b8.setFont(new java.awt.Font("Times New Roman", 0, 72)); // NOI18N
        b8.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 51, 51)));
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b5.setFont(new java.awt.Font("Times New Roman", 0, 72)); // NOI18N
        b5.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 51, 51)));
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b2.setFont(new java.awt.Font("Times New Roman", 0, 72)); // NOI18N
        b2.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 51, 51)));
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.setFont(new java.awt.Font("Times New Roman", 0, 72)); // NOI18N
        b3.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 51, 51)));
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b6.setFont(new java.awt.Font("Times New Roman", 0, 72)); // NOI18N
        b6.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 51, 51)));
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b9.setFont(new java.awt.Font("Times New Roman", 0, 72)); // NOI18N
        b9.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 51, 51)));
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        Reset.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        Reset.setText("Play Again");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(b7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                    .addComponent(b4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(b5, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(b8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(b9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                        .addComponent(b3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(b5, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                        .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(b9, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(b7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // TODO add your handling code here:
       
       if(buttonused[0]==0)
       {
           if(turn%2!=0)
            {
                
                b1.setForeground(Color.RED);
                b1.setBackground(Color.WHITE);
                b1.setText("X");
                turn++;
                counter++;
                buttonused[0]=1;
                p1won[0]=1;
                
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
                
                
            }
            else if(turn%2==0)
            {
                b1.setForeground(Color.blue);
                b1.setBackground(Color.WHITE);
                b1.setText("0");
                turn++;
                counter++;
                buttonused[0]=1;
                p2won[0]=1;
                
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
              
            }
       }
        
       else
       {
           JOptionPane.showMessageDialog(rootPane,"! This Button is used allready !");
       }
        
    }//GEN-LAST:event_b1ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        // TODO add your handling code here:
     
     if(buttonused[3]==0)   
     {
         if(turn%2!=0)
         {
           b4.setForeground(Color.RED);
           b4.setBackground(Color.WHITE);
           b4.setText("X");
           turn++;
           counter++;
           buttonused[3]=1;
           p1won[3]=1;
           
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
         }
         
         else if(turn%2==0)
         {
           b4.setForeground(Color.blue);
           b4.setBackground(Color.WHITE);
           b4.setText("0");
           turn++;
           counter++;
           buttonused[3]=1;
           p2won[3]=1;
           
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
         }
     }   
     
     
     else
     {
         JOptionPane.showMessageDialog(rootPane,"! This Button is used allready !");
     }
    }//GEN-LAST:event_b4ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        // TODO add your handling code here:
        
        if(buttonused[6]==0)
        {
                 if(turn%2!=0)
                 {
                    b7.setForeground(Color.RED);
                    b7.setBackground(Color.WHITE);
                    b7.setText("X");
                    turn++;
                    counter++;
                    buttonused[6]=1;
                    p1won[6]=1;
                    
                    int resultp1=p1won();
                    int resultp2=p2won();

                    if(resultp1==1)
                    {
                      JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }

                    else if(resultp2==1)
                    {
                      JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                    
                    else if(counter==9)
                    {

                        if(resultp1!=1 && resultp2!=1)
                        {
                            JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                        }

                        else if(resultp1==1)
                        {
                            JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                        }

                        else if(resultp2==1)
                        {
                            JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                        }
                    }
                 }
                 
                 else if(turn%2==0)
                 {
                    b7.setForeground(Color.blue);
                    b7.setBackground(Color.WHITE);
                    b7.setText("0");
                    turn++;
                    counter++;
                    buttonused[6]=1;
                    p2won[6]=1;
                    
                    int resultp1=p1won();
                    int resultp2=p2won();

                    if(resultp1==1)
                    {
                      JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }

                    else if(resultp2==1)
                    {
                      JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                    
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }               }   
        }
        
        else
        {
            JOptionPane.showMessageDialog(rootPane,"! This Button is used allready !");
        }
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        // TODO add your handling code here:
       
        if(buttonused[7]==0)
        {
            if(turn%2!=0)
            {
                b8.setForeground(Color.RED);
                b8.setBackground(Color.WHITE);
                b8.setText("X");
                turn++;
                counter++;
                buttonused[7]=1;
                p1won[7]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            }
            else if(turn%2==0)
            {
                b8.setForeground(Color.blue);
                b8.setBackground(Color.WHITE);
                b8.setText("0");
                turn++;
                counter++;
                buttonused[7]=1;
                p2won[7]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            }
        }
        
        else
        {
           JOptionPane.showMessageDialog(rootPane,"! This Button is used allready !"); 
        }
        
       
    }//GEN-LAST:event_b8ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        // TODO add your handling code here:
       
      if(buttonused[4]==0)
      {
            if(turn%2!=0)
            {
                b5.setForeground(Color.RED);
                b5.setBackground(Color.WHITE);
                b5.setText("X");
                turn++;
                counter++;
                buttonused[4]=1;
                p1won[4]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                 else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            }
            else if(turn%2==0)
            {
                b5.setForeground(Color.blue);
                b5.setBackground(Color.WHITE);
                b5.setText("0");
                turn++;
                counter++;
                buttonused[4]=1;
                p2won[4]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            } 
      }
              
      else
      {
          JOptionPane.showMessageDialog(rootPane,"! This Button is used allready !");
      }
      
        
    }//GEN-LAST:event_b5ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        // TODO add your handling code here:
       if(buttonused[1]==0)
       {
            if(turn%2!=0)
            {
                b2.setForeground(Color.RED);
                b2.setBackground(Color.WHITE);
                b2.setText("X");
                turn++;
                counter++;
                buttonused[1]=1;
                p1won[1]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            }
            else if(turn%2==0)
            {
                b2.setForeground(Color.blue);
                b2.setBackground(Color.WHITE);
                b2.setText("0");
                turn++;
                counter++;
                buttonused[1]=1;
                p2won[1]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            }
       }
       
       else
       {
           JOptionPane.showMessageDialog(rootPane,"! This Button is used allready !");
       }
        
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        // TODO add your handling code here:
      if(buttonused[2]==0)
      {
            if(turn%2!=0)
            {
                b3.setForeground(Color.RED);
                b3.setBackground(Color.WHITE);
                b3.setText("X");
                turn++;
                counter++;
                buttonused[2]=1;
                p1won[2]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            }
            else if(turn%2==0)
            {
                b3.setForeground(Color.blue);
                b3.setBackground(Color.WHITE);
                b3.setText("0");
                turn++;
                counter++;
                buttonused[2]=1;
                p2won[2]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                 else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            }
      }
        
      else
      {
         JOptionPane.showMessageDialog(rootPane,"! This Button is used allready !"); 
      }
      
        
    }//GEN-LAST:event_b3ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        // TODO add your handling code here:
       if(buttonused[5]==0)
       {
            if(turn%2!=0)
            {
                b6.setForeground(Color.RED);
                b6.setBackground(Color.WHITE);
                b6.setText("X");
                turn++;
                counter++;
                buttonused[5]=1;
                p1won[5]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            }
            
            else if(turn%2==0)
            {
                b6.setForeground(Color.blue);
                b6.setBackground(Color.WHITE);
                b6.setText("0");
                turn++;
                counter++;
                buttonused[5]=1;
                p2won[5]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                 else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            }
       }
       
       else
       {
           JOptionPane.showMessageDialog(rootPane,"! This Button is used allready !");
       }
      
    }//GEN-LAST:event_b6ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
        // TODO add your handling code here:
      
       if(buttonused[8]==0)
       {
            if(turn%2!=0)
            {
                b9.setForeground(Color.RED);
                b9.setBackground(Color.WHITE);
                b9.setText("X");
                turn++;
                counter++;
                buttonused[8]=1;
                p1won[8]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            }
            else if(turn%2==0)
            {
                b9.setForeground(Color.blue);
                b9.setBackground(Color.WHITE);
                b9.setText("0");
                turn++;
                counter++;
                buttonused[8]=1;
                p2won[8]=1;
                int resultp1=p1won();
                int resultp2=p2won();
                
                if(resultp1==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                }
                
                else if(resultp2==1)
                {
                  JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                }
                
                else if(counter==9)
                {
                    
                    if(resultp1!=1 && resultp2!=1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** MATCH IS DRAW **");
                    }
                    
                    else if(resultp1==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 1 HAS WON **");  
                    }
                    
                    else if(resultp2==1)
                    {
                        JOptionPane.showMessageDialog(rootPane,"** PLAYER 2 HAS WON **");  
                    }
                }
            }  
       }
       
       else
       {
           JOptionPane.showMessageDialog(rootPane,"! This Button is used allready !");
       }
        
    }//GEN-LAST:event_b9ActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // TODO add your handling code here:
        b1.setText("");
        b2.setText("");
        b3.setText("");
        b4.setText("");
        b5.setText("");
        b6.setText("");
        b7.setText("");
        b8.setText("");
        b9.setText("");
        
        for(int i=0;i<9;i++)
        {
            p1won[i]=0;
            p2won[i]=0;
            buttonused[i]=0;
            counter=0;
        }
    }//GEN-LAST:event_ResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tictactoe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tictactoe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tictactoe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tictactoe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tictactoe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Reset;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    // End of variables declaration//GEN-END:variables
}
